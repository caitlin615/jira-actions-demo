on:
  pull_request_review:
    types: [submitted]

name: Update Jira Ticket

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    # - name: Login
    #   uses: atlassian/gajira-login@master
    #   env:
    #     JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
    #     JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}
    #     JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}

    # - name: Find Jira Comment
    #   uses: peter-evans/find-comment@v1
    #   id: ticket-comment
    #   with:
    #     issue_number: ${{ steps.pr.outputs.number }}
    #     issue-number: ${{ steps.pr.outputs.number }}
    #     body-includes: "[auto-generated] Ticket created:"

    - uses: actions/github-script@0.9.0
      id: github-comment
      with:
        script: |
          const pull_number = context.payload.pull_request_review.pull_request.number
          console.log(pull_number)
          const comments = await github.pulls.listComments({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number
          })
          console.log(JSON.stringify(comments.data))

# const comment = await github.pulls.getComment({
#   owner: context.repo.owner,
#   repo: context.repo.repo,
#   comment_id: ${{ steps.ticket-comment.outputs.comment-id }},
# })
# console.log(JSON.stringify(comment.data))

    # - name: Extract issue from title
    #   id: extract
    #   env:
    #     TITLE: "${{ steps.github-comment.outputs. }}"
    #   run: |
    #     jira_url=$(echo -n $TITLE | sed -r 's/\[auto-generated\] Ticket created: (.*)/\1/')
    #     jira_id=${jira_url##*/}
    #     echo ::set-output name=jira_id::$jira_id

    # - name: Comment on Jira Ticket
    #   uses: atlassian/gajira-comment@master
    #   if: ${{ github.event.pull_request_review.state == "APPROVED" }}
    #   with:
    #     issue: ${{ steps.extract.outputs.jira_id }}
    #     comment: "APPROVED by: ${{ github.event.pull_request_review.user.login }}. See ${{ github.event.pull_request_review.html_url }}."
